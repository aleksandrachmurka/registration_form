{"version":3,"sources":["components/Modal/Modal.module.css","components/Form/Form.module.css","components/Input/Input.module.css","components/Error/Error.module.css","components/Backdrop/Backdrop.module.css","components/Button/Button.module.css","config/inputs.js","utils/validateForm.js","hooks/useForm.js","components/Input/Input.js","components/Backdrop/Backdrop.js","components/Modal/Modal.js","components/Button/Button.js","components/Error/Error.js","components/Form/Form.js","utils/prepareData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","formInputs","firstName","id","type","label","placeholder","required","value","userName","password","repeatPassword","email","checkIfEmpty","input","trim","checkIfEmailIsIncorrect","test","useForm","callback","useState","inputs","setInputs","errors","setErrors","handleSubmit","e","preventDefault","repeatedPassword","push","inputErrors","isFormValid","length","validateForm","target","reset","handleInput","persist","Input","changeHandler","className","styles","inputContainer","htmlFor","onChange","Backdrop","show","close","backdrop","onClick","message","success","error","Modal","status","modal","hide","Button","isSubmitting","button","disabled","Error","container","text","map","index","key","url","Form","data","prepareData","setIsSubmitting","sendFormData","setModal","a","fetch","method","body","JSON","stringify","handleSuccess","handleError","console","log","form","onSubmit","fieldset","legend","Object","keys","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1f5ac0bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1bnSi\",\"message\":\"Modal_message__3xwk0\",\"success\":\"Modal_success__fFD0t\",\"error\":\"Modal_error__3fsJH\",\"show\":\"Modal_show__3iRvC\",\"hide\":\"Modal_hide__3PidT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3nNlV\",\"fieldset\":\"Form_fieldset__2OPEA\",\"legend\":\"Form_legend__237gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Input_inputContainer__2dEl_\",\"label\":\"Input_label__3tZ1I\",\"input\":\"Input_input__1YkA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error_container__1cVtw\",\"text\":\"Error_text__G4Rdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__1yHMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QqSm\"};","export const formInputs = {\r\n  firstName: {\r\n    id: 'firstName',\r\n    type: 'text',\r\n    label: 'First Name',\r\n    placeholder: 'First name (optional)',\r\n    required: false,\r\n    value: '',\r\n  },\r\n  userName: {\r\n    id: 'userName',\r\n    type: 'text',\r\n    label: 'Username',\r\n    placeholder: 'Enter username',\r\n    required: true,\r\n    value: '',\r\n  },\r\n  password: {\r\n    id: 'password',\r\n    type: 'password',\r\n    label: 'Password',\r\n    placeholder: 'Enter password',\r\n    required: true,\r\n    value: '',\r\n  },\r\n  repeatPassword: {\r\n    id: 'repeatPassword',\r\n    type: 'password',\r\n    label: 'Repeat password',\r\n    placeholder: 'Repeat password',\r\n    required: true,\r\n    value: '',\r\n  },\r\n  email: {\r\n    id: 'email',\r\n    type: 'email',\r\n    label: 'Email',\r\n    placeholder: 'Enter your email',\r\n    required: true,\r\n    value: '',\r\n  }\r\n};","const checkIfEmpty = (input) => {\r\n  return input.value.trim() === '';\r\n}\r\n\r\nconst checkIfPasswordIsDifferent = (password, repeatedPassword) => {\r\n  return password !== repeatedPassword;\r\n}\r\n\r\nconst checkIfEmailIsIncorrect = (input) => {\r\n  return ! /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(input)\r\n}\r\n\r\nexport const validateForm = (inputs) => {\r\n  const errors = [];\r\n  for (let input in inputs) {\r\n    if (inputs[input].required && checkIfEmpty(inputs[input])) {\r\n      errors.push(`${inputs[input].label} is empty. Please fill it in.`);\r\n    }\r\n    if (inputs[input].id === 'repeatPassword' && checkIfPasswordIsDifferent(inputs['password'].value, inputs[input].value)) {\r\n      errors.push('Passwords must be identical.')\r\n    }\r\n    if (inputs[input].id === 'email' && checkIfEmailIsIncorrect(inputs[input].value)) {\r\n      errors.push('Email format is incorrect.')\r\n    }\r\n  }\r\n\r\n  return {\r\n    inputErrors: errors,\r\n    isFormValid: errors.length === 0,\r\n  }\r\n}","import { useState } from 'react';\r\nimport { formInputs } from '../config/inputs';\r\nimport { validateForm } from '../utils/validateForm';\r\n\r\nexport const useForm = (callback) => {\r\n  const [inputs, setInputs] = useState(formInputs);\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const handleSubmit = (e) => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    if (errors) {\r\n      setErrors([])\r\n    }\r\n\r\n    const { inputErrors, isFormValid } = validateForm(inputs)\r\n\r\n    if (isFormValid) {\r\n      callback()\r\n      e.target.reset();\r\n      setInputs(inputs => formInputs)\r\n    } else {\r\n      setErrors(errors => [...inputErrors])\r\n    }\r\n  }\r\n\r\n  const handleInput = (e) => {\r\n    e.persist();\r\n    setInputs(inputs => ({ ...inputs, [e.target.id]: { ...inputs[e.target.id], value: e.target.value } }))\r\n  }\r\n\r\n  return {\r\n    handleSubmit,\r\n    handleInput,\r\n    inputs,\r\n    errors,\r\n  }\r\n};","import React from 'react';\r\nimport styles from './Input.module.css'\r\n\r\nconst Input = ({ input, changeHandler }) => {\r\n  const { id, label, type, placeholder, required } = input;\r\n  return (\r\n    <div className={styles.inputContainer}>\r\n      <label className={styles.label} htmlFor={id}>{label}</label>\r\n      <input className={styles.input} id={id} type={type}\r\n        placeholder={placeholder} required={required} onChange={changeHandler}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\nimport styles from './Backdrop.module.css';\r\n\r\nconst Backdrop = ({ show, close }) => (\r\n  show && <div className={styles.backdrop} onClick={close}></div>\r\n);\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport styles from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst message = {\r\n  success: 'Registered successfully!',\r\n  error: 'Error occured while processing your registration request :(',\r\n};\r\n\r\nconst Modal = ({ show, status, close }) => (\r\n  <>\r\n    <Backdrop show={show} close={close} />\r\n    <div className={`${styles.modal} ${styles[status]} ${show ? styles.show : styles.hide}`}>\r\n      <p className={styles.message}>\r\n        {message[status]}\r\n      </p>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default Modal;","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ isSubmitting }) => (\r\n  <button type=\"submit\" className={styles.button} disabled={isSubmitting}>\r\n    {isSubmitting ? 'Registering...' : 'Register'}\r\n  </button>\r\n);\r\n\r\nexport default Button;","import React from 'react';\r\nimport styles from './Error.module.css'\r\n\r\nconst Error = ({ errors }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <p className={styles.text}>Please review errors and resubmit:</p>\r\n      { errors.map((error, index) => <p key={index}>{error}</p>)}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Error;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport styles from './Form.module.css';\r\nimport { formInputs } from '../../config/inputs';\r\nimport { prepareData } from '../../utils/prepareData';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Input from '../Input/Input';\r\nimport Modal from '../Modal/Modal';\r\nimport Button from '../Button/Button';\r\nimport Error from '../Error/Error';\r\n\r\nconst url = 'https://registration-form-6c099.firebaseio.com/users.json';\r\n\r\nconst Form = () => {\r\n  const { handleSubmit, handleInput, inputs, errors } = useForm(handleFormData);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [modal, setModal] = useState({ show: false, status: '' });\r\n\r\n  function handleFormData() {\r\n    const data = prepareData(inputs);\r\n    setIsSubmitting(true);\r\n    sendFormData(data)\r\n  }\r\n\r\n  async function sendFormData(data) {\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n      })\r\n\r\n      if (response.status === 200) {\r\n        handleSuccess(data);\r\n      }\r\n    } catch {\r\n      handleError();\r\n    }\r\n  }\r\n\r\n  function handleSuccess(data) {\r\n    setIsSubmitting(false);\r\n    console.log(data);\r\n    setModal({ show: true, status: 'success' });\r\n  }\r\n\r\n  function handleError() {\r\n    setIsSubmitting(false);\r\n    setModal({ show: true, status: 'error' });\r\n  }\r\n\r\n  function closeModal() {\r\n    setModal({ show: false, status: '' });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={modal.show} status={modal.status} close={closeModal} />\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <fieldset className={styles.fieldset}>\r\n          <legend className={styles.legend}>Register</legend>\r\n          {\r\n            Object.keys(formInputs)\r\n              .map(input => <Input input={formInputs[input]} key={formInputs[input].id} changeHandler={handleInput} />)\r\n          }\r\n        </fieldset>\r\n        {errors.length !== 0 && <Error errors={errors} />}\r\n        <Button isSubmitting={isSubmitting} />\r\n      </form>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Form;","export const prepareData = (inputs) => ({\r\n  firstName: inputs.firstName.value || '',\r\n  userName: inputs.userName.value,\r\n  password: inputs.password.value,\r\n  repeatPassword: inputs.repeatPassword.value,\r\n  email: inputs.email.value,\r\n});","import React from 'react';\nimport './App.css';\nimport Form from './components/Form/Form';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}